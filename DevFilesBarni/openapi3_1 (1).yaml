openapi: 3.1.0
info:
  title: Project Management API
  version: 1.0.0
  description: API for managing projects, developers, managers, and tasks.
servers:
  - url: https://api.example.com/v1
paths:
  /managers:
    get:
      summary: Get all managers
      responses:
        '200':
          description: A list of managers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manager'
    post:
      summary: Create a new manager
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manager'
      responses:
        '201':
          description: Manager created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
  /managers/{id}:
    get:
      summary: Get manager by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Manager found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        '404':
          description: Manager not found
    put:
      summary: Update manager by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manager'
      responses:
        '200':
          description: Manager updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
        '404':
          description: Manager not found
    delete:
      summary: Delete manager by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Manager deleted successfully
  /developers:
    get:
      summary: Get all developers
      responses:
        '200':
          description: A list of developers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Developer'
    post:
      summary: Create a new developer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Developer'
      responses:
        '201':
          description: Developer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
  /developers/{id}:
    get:
      summary: Get developer by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Developer found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
        '404':
          description: Developer not found
    put:
      summary: Update developer by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Developer'
      responses:
        '200':
          description: Developer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Developer'
        '404':
          description: Developer not found
    delete:
      summary: Delete developer by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Developer deleted successfully
  /projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /projects/{id}:
    get:
      summary: Get project by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
    put:
      summary: Update project by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
    delete:
      summary: Delete project by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Project deleted successfully
  /projectTypes:
    get:
      summary: Get all project types
      responses:
        '200':
          description: A list of project types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
    post:
      summary: Create a new project type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
      responses:
        '201':
          description: Project type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
  /projectTypes/{id}:
    get:
      summary: Get project type by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Project type found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
        '404':
          description: Project type not found
    put:
      summary: Update project type by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
      responses:
        '200':
          description: Project type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
        '404':
          description: Project type not found
    delete:
      summary: Delete project type by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Project type deleted successfully
  /tasks:
    get:
      summary: Get all tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    get:
      summary: Get task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    put:
      summary: Update task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    delete:
      summary: Delete task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted successfully
components:
  schemas:
    Manager:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Developer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/ProjectType'
        description:
          type: string
    ProjectType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Task:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        project_id:
          type: integer
        user_id:
          type: integer
        deadline:
          type: string
          format: date-time
